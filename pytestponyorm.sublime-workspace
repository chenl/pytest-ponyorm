{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"db",
				"db_pony\tstatement"
			],
			[
				"db_p",
				"db_pony"
			],
			[
				"k",
				"kwargs\tparam"
			],
			[
				"def",
				"default"
			],
			[
				"ma",
				"mark\tinstance"
			],
			[
				"medic",
				"medicament\tfunction"
			],
			[
				"ord",
				"ordonnance\tfunction"
			],
			[
				"for",
				"fordo\tfunction"
			],
			[
				"to",
				"to_dict"
			],
			[
				"pa",
				"patient\tfunction"
			],
			[
				"ordo",
				"ordonnance\tparam"
			],
			[
				"M",
				"Medicament"
			],
			[
				"oro",
				"ordonnance\tfunction"
			],
			[
				"fa",
				"fake_patient\tfunction"
			],
			[
				"fake",
				"fakeuser"
			],
			[
				"whi",
				"with\tkeyword"
			],
			[
				"O",
				"Ordonnance"
			],
			[
				"date",
				"datetime\tmodule"
			],
			[
				"url",
				"urlparse\tfunction"
			],
			[
				"rout",
				"routes_theso\tmodule"
			],
			[
				"ro",
				"routes_theso\tstatement"
			],
			[
				"the",
				"theso_session\tstatement"
			],
			[
				"Obs",
				"ObservationUpdateSchema"
			],
			[
				"Obse",
				"ObservationCreateSchema"
			],
			[
				"com",
				"Component\tclass"
			],
			[
				"max",
				"maxlength"
			],
			[
				"Patien",
				"PatientUpdateSchema\tstatement"
			],
			[
				"Patient",
				"PatientUpdateSchema"
			],
			[
				"valid",
				"validated_data\tstatement"
			],
			[
				"pra",
				"parameter\tparam"
			],
			[
				"Pat",
				"PatientUpdateSchema\tstatement"
			],
			[
				"PAtie",
				"PatientSchema"
			],
			[
				"Patint",
				"PatientSchema\tclass"
			],
			[
				"VA",
				"ValidatedRequestData\tstatement"
			],
			[
				"C",
				"Component\tclass"
			],
			[
				"Pa",
				"PatientCreateSchema\tstatement"
			],
			[
				"set",
				"setattr\tfunction"
			],
			[
				"Bas",
				"BaseActe\tclass"
			],
			[
				"Ba",
				"BaseActe\tclass"
			],
			[
				"ne",
				"new_data\tparam"
			],
			[
				"ob",
				"observation_update\tfunction"
			],
			[
				"Ob",
				"ObservationSchema\tclass"
			],
			[
				"obs",
				"obs_id\tparam"
			],
			[
				"Observa",
				"ObservationUpdateSchema\tclass"
			],
			[
				"prop",
				"properties"
			],
			[
				"op",
				"operator\tmodule"
			],
			[
				"item",
				"_itemgetter\tclass"
			],
			[
				"patient",
				"patient_id\tparam"
			],
			[
				"Obser",
				"ObservationSchema\tclass"
			],
			[
				"get",
				"get_or_404\tmodule"
			],
			[
				"tp",
				"typing\tmodule"
			],
			[
				"P",
				"PatientSchema\tclass"
			],
			[
				"Qu",
				"QueryParams\tclass"
			],
			[
				"H",
				"HTTP"
			],
			[
				"pat",
				"patient\tstatement"
			],
			[
				"In",
				"IntegrityError\tclass"
			],
			[
				"dj",
				"django\tmodule"
			],
			[
				"ow",
				"owner_id"
			],
			[
				"BAs",
				"BaseActeSchema\tclass"
			],
			[
				"BaseActe",
				"BaseActeSchema"
			],
			[
				"Base",
				"BaseActeSchema\tclass"
			],
			[
				"types",
				"typesystem\tmodule"
			],
			[
				"Fac",
				"FacObservation\tclass"
			],
			[
				"FAc",
				"FacPatient\tclass"
			],
			[
				"fact",
				"factory_users\tmodule"
			],
			[
				"test",
				"tests\tmodule"
			],
			[
				"FacUser",
				"FacUsero\tclass"
			],
			[
				"fac",
				"factory_users\tmodule"
			],
			[
				"Fa",
				"FacUser"
			],
			[
				"TEST",
				"TEST_RUNNING"
			],
			[
				"aps",
				"apistar\tmodule"
			],
			[
				"get_",
				"get_session"
			],
			[
				"djan",
				"django_orm"
			],
			[
				"D",
				"DjangoORM"
			],
			[
				"app",
				"app_fix\tfunction"
			],
			[
				"apis",
				"apistar_shell_components\tmodule"
			],
			[
				"api",
				"apistar_shell"
			],
			[
				"con",
				"configured\tfunction"
			],
			[
				"get_us",
				"get_user_model\tfunction"
			],
			[
				"au",
				"auth\tmodule"
			],
			[
				"Au",
				"AuthUser\tclass"
			],
			[
				"retu",
				"return_empty_dict"
			],
			[
				"authe",
				"authentication"
			],
			[
				"retur",
				"return_empty_dict\tfunction"
			],
			[
				"authen",
				"authentication\tmodule"
			],
			[
				"p",
				"patch\tfunction"
			],
			[
				"Ma",
				"MagicMock\tclass"
			],
			[
				"uni",
				"unittest\tmodule"
			],
			[
				"Auth",
				"AuthenticationFailed\tclass"
			],
			[
				"ret",
				"return_empty_dict\tfunction"
			],
			[
				"mon",
				"monkeypatch\tparam"
			],
			[
				"auth",
				"auth_user\tparam"
			],
			[
				"aut",
				"auth_user"
			],
			[
				"us",
				"user"
			],
			[
				"some",
				"something"
			],
			[
				"Ex",
				"ExpiredSignatureError\tclass"
			],
			[
				"auh",
				"authenticate"
			],
			[
				"user",
				"user_logged\tstatement"
			],
			[
				"A",
				"Auth\tclass"
			],
			[
				"typ",
				"typing\tmodule"
			],
			[
				"fo",
				"Forbidden\tclass"
			],
			[
				"Does",
				"ObjectDoesNotExist\tclass"
			],
			[
				"exc",
				"exceptions\tmodule"
			],
			[
				"d",
				"django_orm\tmodule"
			],
			[
				"Not",
				"NotFound\tclass"
			],
			[
				"Patie",
				"PatientWriteSchema\tclass"
			],
			[
				"type",
				"typesystem\tmodule"
			],
			[
				"patients",
				"patients"
			],
			[
				"pati",
				"patients"
			],
			[
				"b",
				"BadRequest\tclass"
			],
			[
				"rea",
				"raises\tfunction"
			],
			[
				"Re",
				"RegularText\tclass"
			],
			[
				"asp",
				"aps_get_object_or_404\tmodule"
			],
			[
				"try",
				"try\tTry/Except"
			],
			[
				"ap",
				"aps_get_object_or_404\tfunction"
			],
			[
				"arg",
				"args\tparam"
			],
			[
				"N",
				"NotFound\tclass"
			],
			[
				"exce",
				"except"
			],
			[
				"MA",
				"matching_exception\tstatement"
			],
			[
				"__",
				"__class__"
			],
			[
				"dja",
				"django_get_object_or_404\tfunction"
			],
			[
				"qu",
				"queryset"
			],
			[
				"dec",
				"decored\tfunction"
			],
			[
				"cooki",
				"cookie_path\tstatement"
			],
			[
				"coo",
				"cookie_path\tstatement"
			],
			[
				"write",
				"write_text\tfunction"
			]
		]
	},
	"buffers":
	[
		{
			"file": "pytestponyorm.sublime-project",
			"settings":
			{
				"buffer_size": 407,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "# -*- coding: utf-8 -*-\n\nimport pytest\nimport importlib\nfrom pony import orm\n\ndb = orm.Database()\n\nurl = urlparse(\"postgres://j:j@localhost:5432/mapistar3\")\ndb.connect(\n    provider=postres,\n    host=localhost,\n    database=\"mapistar3\",\n    user=\"j\",\n    password=\"j\",\n    port=url.port,\n    create_tables=True,\n)\n\n\ndef pytest_addoption(parser):\n    parser.addini('PONY_DB', 'pony db location')\n\ndef pytest_configure(config):\n    config.addinivalue_line(\n        \"markers\", \"pony: mark a test with use of db_sesion and reset db \")\n\n\n\n@pytest.fixture(scope='session', autouse=True)\ndef ponydb(request):\n    \"\"\"return db : main Database instance\"\"\"\n    # db_path = request.config.getini('PONY_DB')\n    # db = importlib.import_module(db_path).db\n    return db\n\n\n# @pytest.fixture(scope='function')\n# def _db_session(request):\n#     \"\"\" Use db_session context manager inside tests \"\"\"\n#     with orm.db_session:\n#         yield\n\n\n\n\n@pytest.fixture(autouse=True)\ndef marker(request):\n    \"\"\" marker for ponyorm \"\"\"\n    marker = request.keywords.get('pony', None)\n    if marker:\n        request.getfixturevalue('_db_session')\n\n\ndef pytest_runtest_setup(item):\n    \"\"\"\n    Before each test, database is cleared unless \"reset_db\" is False :\n    @pytest.mark.pony(reset_db=False)\n    \"\"\"\n    marker = item.get_marker('pony')\n    if marker:\n        if marker.kwargs.get('reset_db', True):\n            # rest db before running test\n            db = ponydb(item)\n            db.drop_all_tables(with_all_data=True)\n            db.create_tables()\n\n\ndef pytest_runtest_call(item):\n\n    marker = item.get_marker('pony')\n    if marker:\n        orm.commit()\n",
			"file": "pytest_ponyorm.py",
			"file_size": 1422,
			"file_write_time": 131671660840150706,
			"settings":
			{
				"buffer_size": 1640,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/app.py",
			"settings":
			{
				"buffer_size": 185,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Pipfile",
			"settings":
			{
				"buffer_size": 264,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tox.ini",
			"settings":
			{
				"buffer_size": 319,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "requirements.txt",
			"settings":
			{
				"buffer_size": 31,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/test_ponyorm.py",
			"settings":
			{
				"buffer_size": 5534,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Anaconda Python Builder",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/MagicPython/settings/sublime/Python.sublime-build",
					""
				],
				[
					"Packages/MagicPython/settings/sublime/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Virtualenv/Python + Virtualenv.sublime-build",
					""
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/MagicPython/settings/sublime/Python.sublime-build",
					""
				],
				[
					"Packages/MagicPython/settings/sublime/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Virtualenv/Python + Virtualenv.sublime-build",
					""
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 374.0,
		"last_filter": "togg",
		"selected_items":
		[
			[
				"togg",
				"Toggle Comment"
			],
			[
				"chang",
				"Git: Change Branch"
			],
			[
				"new",
				"Git: New Branch"
			],
			[
				"chan",
				"Git: Change Branch"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add..."
			],
			[
				"comm",
				"Git: Commit"
			],
			[
				"sta",
				"Git: Stash Pop"
			],
			[
				"stash",
				"Git: Stash Changes"
			],
			[
				"act",
				"Virtualenv: Activate"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"unfo",
				"Code Folding: Unfold All"
			],
			[
				"iso",
				"ImportSort: Sort imports"
			],
			[
				"push",
				"Git: Push"
			],
			[
				"q",
				"Git: Quick Commit (repo)"
			],
			[
				"pul",
				"Git: Pull"
			],
			[
				"chna",
				"Git: Change Branch"
			],
			[
				"to",
				"Toggle Comment"
			],
			[
				"brack",
				"BracketHighlighter: Remove Brackets"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"ch",
				"Git: Change Branch"
			],
			[
				"pu",
				"Git: Pull"
			],
			[
				"puh",
				"Git: Push"
			],
			[
				"indent",
				"Indentation: Reindent Lines"
			],
			[
				"cha",
				"Git: Change Branch"
			],
			[
				"gut",
				"GitGutter: Compare Against Origin"
			],
			[
				"change",
				"Git: Change Branch"
			],
			[
				"git a",
				"Git: Add All"
			],
			[
				"pytest",
				"PyTest: Run: Current file"
			],
			[
				"is",
				"ImportSort: Sort imports"
			],
			[
				"track",
				"Git: Track Remote Branch"
			],
			[
				"merge",
				"Git: Merge Branch"
			],
			[
				"git add",
				"Git: Add All"
			],
			[
				"dele",
				"Git: Delete Branch"
			],
			[
				"bran",
				"Git: New Branch"
			],
			[
				"pull",
				"Git: Pull"
			],
			[
				"feth",
				"Git: Fetch"
			],
			[
				"git rs",
				"Git: Reset (hard) HEAD"
			],
			[
				"dif",
				"Git: Diff Tool All"
			],
			[
				"dift",
				"Git: Diff Tool All"
			],
			[
				"delete",
				"Git: Delete Branch"
			],
			[
				"statu",
				"Git: Status"
			],
			[
				"branc",
				"Git: New Branch"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"pus",
				"Git: Push"
			],
			[
				"instl",
				"Package Control: Install Package"
			],
			[
				"qu",
				"Git: Quick Commit (repo)"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			]
		],
		"width": 506.0
	},
	"console":
	{
		"height": 140.0,
		"history":
		[
			"sublime.log_commands(True)",
			"sublime.log"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/jim/dev/maison/pytest-ponyorm",
		"/home/jim/dev/maison/pytest-ponyorm/tests"
	],
	"file_history":
	[
		"/home/jim/dev/maison/pytest-ponyorm/tests/test_ponyorm.py",
		"/home/jim/dev/maison/pytest-ponyorm/build/lib/pytest_ponyorm.py",
		"/home/jim/dev/maison/pytest-ponyorm/pytest.ini",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/src/pony/pony/orm/core.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/src/pony/pony/orm/ormtypes.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/src/pony/pony/__init__.py",
		"/home/jim/dev/maison/mapistar/tests/test_theso.py",
		"/home/jim/dev/maison/mapistar/mapistar/theso.py",
		"/home/jim/dev/maison/mapistar/.env",
		"/home/jim/dev/maison/mapistar/Pipfile",
		"/home/jim/dev/maison/mapistar/.travis.yml",
		"/home/jim/dev/maison/mapistar/app.py",
		"/home/jim/dev/maison/mapistar/tests/sand.py",
		"/home/jim/dev/maison/mapistar/setup.cfg",
		"/home/jim/dev/maison/mapistar/mapistar/actes/views.py",
		"/home/jim/dev/maison/mapistar/mapistar/users.py",
		"/home/jim/.env/mapistar-u3z0Ka1e/lib/python3.6/site-packages/_pytest/mark/structures.py",
		"/home/jim/dev/maison/mapistar/tests/test_ordonnances.py",
		"/home/jim/dev/maison/mapistar/aaatests2/factories.py",
		"/home/jim/dev/maison/mapistar/mapistar/base_db.py",
		"/home/jim/dev/maison/mapistar/mapistar/models.py",
		"/home/jim/dev/maison/mapistar/migrate2.py",
		"/home/jim/dev/maison/mapistar/mapistar/migrations/0001_initial.py",
		"/home/jim/dev/maison/mapistar/mapistar/actes/models.py",
		"/home/jim/.env/mapistar-u3z0Ka1e/lib/python3.6/site-packages/pythonthesorimed/thesoitem.py",
		"/home/jim/dev/maison/mapistar/tests/test_patients.py",
		"/home/jim/dev/maison/mapistar/mapistar/actes/schemas.py",
		"/home/jim/dev/maison/mapistar/mapistar/utils.py",
		"/home/jim/dev/maison/mapistar/ancien/actes/models.py",
		"/home/jim/dev/maison/mapistar/todo.txt",
		"/home/jim/dev/maison/mapistar/mapistar/patients.py",
		"/home/jim/dev/maison/mapistar/tests/factory.py",
		"/home/jim/.env/mapistar-u3z0Ka1e/lib/python3.6/site-packages/cerberus/validator.py",
		"/home/jim/.config/sublime-text-3/Packages/User/PyYapf.sublime-settings",
		"/home/jim/.env/mapistar-u3z0Ka1e/lib/python3.6/site-packages/cerberus/__init__.py",
		"/home/jim/dev/maison/mapistar/pytest.ini",
		"/home/jim/dev/maison/mapistar/tests/conftest.py",
		"/home/jim/dev/maison/mapistar/mapistar/ordonnances.py",
		"/home/jim/dev/maison/mapistar/mapistar.sublime-project",
		"/home/jim/dev/maison/mapistar/config/django/settings/testing.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/lib/python3.6/site-packages/django/db/models/__init__.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/lib/python3.6/site-packages/django/db/models/base.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/lib/python3.6/site-packages/django/db/models/query.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/lib/python3.6/site-packages/django/db/models/manager.py",
		"/home/jim/dev/maison/mapistar/mapistar/patients/views.py",
		"/home/jim/dev/maison/mapistar/tests/actes/test_models.py",
		"/home/jim/dev/maison/mapistar/tests/factories.py",
		"/home/jim/dev/maison/mapistar/mapistar/utils/schemas.py",
		"/home/jim/dev/maison/mapistar/mapistar/patients/schemas.py",
		"/home/jim/dev/maison/mapistar/config/django/settings/base.py",
		"/home/jim/dev/maison/mapistar/mapistar/utils/shortcuts.py",
		"/home/jim/dev/maison/mapistar/tests/users/test_utils.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/src/apistar/apistar/__init__.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/src/apistar/apistar/typesystem.py",
		"/home/jim/dev/maison/mapistar/mapistar/patients/urls.py",
		"/home/jim/dev/maison/mapistar/mapistar/actes/urls.py",
		"/home/jim/dev/maison/mapistar/config/settings/base.py",
		"/home/jim/dev/maison/mapistar/config/settings/__init__.py",
		"/home/jim/dev/maison/mapistar/config/settings/local.py",
		"/home/jim/dev/maison/mapistar/config/urls.py",
		"/home/jim/dev/maison/mapistar/mapistar/users/schemas.py",
		"/home/jim/dev/maison/mapistar/tests/users/users_factory.py",
		"/home/jim/dev/maison/mapistar/tests/actes/actes_factory.py",
		"/home/jim/dev/maison/mapistar/tests/patients/patients_factory.py",
		"/home/jim/dev/maison/mapistar/mapistar/users/models.py",
		"/home/jim/dev/maison/mapistar/tests/users/factory_users.py",
		"/home/jim/dev/maison/mapistar/config/get_env.py",
		"/home/jim/dev/maison/mapistar/tests/actes/tesst_models.py",
		"/home/jim/dev/maison/mapistar/config/settings/testing.py",
		"/home/jim/dev/maison/mapistar/tests/users/test_authentication.py",
		"/home/jim/dev/maison/mapistar/tests/users/test_views.py",
		"/home/jim/dev/maison/mapistar/tests/patients/test_views.py",
		"/home/jim/dev/maison/mapistar/mapistar/actes/migrations/0001_initial.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/lib/python3.6/site-packages/django_extensions/__init__.py",
		"/home/jim/dev/maison/mapistar/config/django/__init__.py",
		"/home/jim/dev/maison/mapistar/config/django/settings/__init__.py",
		"/home/jim/dev/maison/mapistar/config/__init__.py",
		"/home/jim/dev/maison/mapistar/Makefile",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/lib/python3.6/site-packages/apistar_shell/__init__.py",
		"/home/jim/dev/maison/mapistar/mapistar/users/authentication.py",
		"/home/jim/dev/maison/mapistar/config/django/settings/local.py",
		"/home/jim/dev/maison/mapistar/config/settings/prod.py",
		"/home/jim/dev/maison/mapistar/manage.py",
		"/home/jim/dev/maison/mapistar/docs/conf.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/lib/python3.6/site-packages/django/conf/__init__.py",
		"/home/jim/dev/maison/mapistar/mapistar/users/urls.py",
		"/home/jim/dev/maison/mapistar/mapistar/users/utils.py",
		"/home/jim/dev/maison/mapistar/mapistar/users/views.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/src/apistar/apistar/exceptions.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/lib/python3.6/site-packages/pytest.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/lib/python3.6/site-packages/_pytest/fixtures.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/lib/python3.6/site-packages/apistar_jwt/token.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/lib/python3.6/site-packages/apistar_jwt/authentication.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/lib/python3.6/site-packages/apistar_jwt/__init__.py",
		"/home/jim/dev/maison/mapistar/tests/patients/test_models.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/src/apistar/apistar/interfaces.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/src/apistar/apistar/core.py",
		"/home/jim/dev/maison/mapistar/mapistar/users/authen.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/src/apistar/apistar/permissions.py",
		"/home/jim/.local/share/virtualenvs/mapistar-u3z0Ka1e/lib/python3.6/site-packages/apistar_jwt/exceptions.py",
		"/home/jim/dev/maison/mapistar/mapistar/utils/django_utils.py",
		"/home/jim/dev/maison/mapistar/config/settings/test.py",
		"/home/jim/dev/maison/mapistar/tests/patients/test_schemas.py",
		"/home/jim/dev/maison/mapistar/factories.py",
		"/home/jim/dev/maison/mapistar/.gitignore",
		"/home/jim/dev/maison/mapistar/env.example",
		"/home/jim/dev/maison/mapistar/tests/test_mapistar.py",
		"/home/jim/dev/maison/pipenv-to-requirements/pipenv_to_requirements/vectors/Pipfile.editable.requirements-dev.txt",
		"/home/jim/dev/maison/cookiecutter-pipenv/{{cookiecutter.project_slug}}/Pipfile",
		"/home/jim/dev/maison/cookiecutter-pipenv/Pipfile",
		"/home/jim/dev/maison/cookiecutter-pipenv/cookiecutter.json",
		"/home/jim/dev/maison/cookiecutter-pipenv/{{cookiecutter.project_slug}}/tests/test_{{cookiecutter.project_slug}}.py",
		"/home/jim/dev/maison/cookiecutter-pipenv/{{cookiecutter.project_slug}}/config/urls.py",
		"/home/jim/dev/maison/cookiecutter-pipenv/{{cookiecutter.project_slug}}/pytest.ini",
		"/home/jim/dev/maison/cookiecutter-pipenv/{{cookiecutter.project_slug}}/{{cookiecutter.project_slug}}/pseudos/schemas.py",
		"/home/jim/dev/maison/cookiecutter-pipenv/{{cookiecutter.project_slug}}/Makefile",
		"/home/jim/dev/maison/cookiecutter-pipenv/{{cookiecutter.project_slug}}/config/base_settings.py",
		"/home/jim/dev/maison/cookiecutter-pipenv/{{cookiecutter.project_slug}}/manage.py",
		"/home/jim/dev/maison/cookiecutter-pipenv/test-script.py",
		"/home/jim/dev/maison/cookiecutter-pipenv/hooks/.fzefze"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 94.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "pytestponyorm.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 407,
						"regions":
						{
						},
						"selection":
						[
							[
								348,
								348
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										405,
										406
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										0,
										1
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 153.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "pytest_ponyorm.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1640,
						"regions":
						{
						},
						"selection":
						[
							[
								286,
								286
							]
						],
						"settings":
						{
							"SL.16.region_keys":
							[
							],
							"SL.42.region_keys":
							[
							],
							"SL.64.region_keys":
							[
							],
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										670,
										671
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										616,
										617
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										312,
										313
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										167,
										168
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "tests/app.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 185,
						"regions":
						{
						},
						"selection":
						[
							[
								185,
								185
							]
						],
						"settings":
						{
							"SL.17.region_keys":
							[
							],
							"SL.68.region_keys":
							[
							],
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										277,
										278
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										258,
										259
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Pipfile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 264,
						"regions":
						{
						},
						"selection":
						[
							[
								185,
								185
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "tox.ini",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 319,
						"regions":
						{
						},
						"selection":
						[
							[
								137,
								137
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"git_gutter_is_enabled": true,
							"history_list_is_closing": true,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "requirements.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31,
						"regions":
						{
						},
						"selection":
						[
							[
								31,
								31
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 6,
					"file": "tests/test_ponyorm.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5534,
						"regions":
						{
						},
						"selection":
						[
							[
								883,
								883
							]
						],
						"settings":
						{
							"SL.21.region_keys":
							[
							],
							"SL.66.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										3427,
										3430
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										2980,
										2983
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": true,
							"history_list_is_closing": true,
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2722.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 203.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 110.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "pytestponyorm.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"re",
				"requirements.txt"
			],
			[
				"tox",
				"tox.ini"
			],
			[
				"app",
				"tests/app.py"
			],
			[
				"pyte",
				"pytest.ini"
			],
			[
				"pi",
				"Pipfile"
			],
			[
				"test",
				"tests/test_ponyorm.py"
			],
			[
				"trav",
				".travis.yml"
			],
			[
				"test_user",
				"tests/test_users.py"
			],
			[
				"user",
				"mapistar/users.py"
			],
			[
				"sand",
				"tests/sand.py"
			],
			[
				"model",
				"mapistar/actes/models.py"
			],
			[
				"actev",
				"mapistar/actes/views.py"
			],
			[
				"testac",
				"tests/test_actes.py"
			],
			[
				"onf",
				"tests/conftest.py"
			],
			[
				"setup.cfg",
				"setup.cfg"
			],
			[
				"testord",
				"tests/test_ordonnances.py"
			],
			[
				"acte",
				"mapistar/actes/models.py"
			],
			[
				"facto",
				"tests/factory.py"
			],
			[
				"fact",
				"aaatests2/factories.py"
			],
			[
				"acmode",
				"mapistar/actes/models.py"
			],
			[
				"actesmod",
				"mapistar/actes/models.py"
			],
			[
				".env",
				".env"
			],
			[
				"actmo",
				"mapistar/actes/models.py"
			],
			[
				"models",
				"ancien/actes/models.py"
			],
			[
				"util",
				"mapistar/utils.py"
			],
			[
				"pytest",
				"pytest.ini"
			],
			[
				"mo",
				"mapistar/actes/models.py"
			],
			[
				"test_pa",
				"tests/test_patients.py"
			],
			[
				"fac",
				"tests/factory.py"
			],
			[
				"conf",
				"tests/conftest.py"
			],
			[
				"pati",
				"mapistar/patients.py"
			],
			[
				"pat",
				"mapistar/patients.py"
			],
			[
				"mapi",
				"mapistar.sublime-project"
			],
			[
				"pipf",
				"Pipfile"
			],
			[
				"ordo",
				"mapistar/ordonnances.py"
			],
			[
				"patient",
				"mapistar/patients.py"
			],
			[
				"testing",
				"config/django/settings/testing.py"
			],
			[
				"patientv",
				"mapistar/patients/views.py"
			],
			[
				"test_mod",
				"tests/actes/test_models.py"
			],
			[
				"testvi",
				"tests/patients/test_views.py"
			],
			[
				"testvie",
				"tests/actes/test_views.py"
			],
			[
				"testuti",
				"tests/users/test_utils.py"
			],
			[
				"base",
				"config/django/settings/base.py"
			],
			[
				"pip",
				"Pipfile"
			],
			[
				"url",
				"mapistar/patients/urls.py"
			],
			[
				"urls",
				"mapistar/actes/urls.py"
			],
			[
				"patsc",
				"mapistar/patients/schemas.py"
			],
			[
				"ini",
				"config/settings/__init__.py"
			],
			[
				"bas",
				"config/settings/base.py"
			],
			[
				"local",
				"config/settings/local.py"
			],
			[
				"pavi",
				"mapistar/patients/views.py"
			],
			[
				"usersch",
				"mapistar/users/schemas.py"
			],
			[
				"patsch",
				"mapistar/patients/schemas.py"
			],
			[
				"actmod",
				"mapistar/actes/models.py"
			],
			[
				"usermod",
				"mapistar/users/models.py"
			],
			[
				"patfa",
				"tests/patients/patients_factory.py"
			],
			[
				"get",
				"config/get_env.py"
			],
			[
				"testin",
				"config/django/settings/testing.py"
			],
			[
				"test_vie",
				"tests/patients/test_views.py"
			],
			[
				"confte",
				"tests/conftest.py"
			],
			[
				"test_auth",
				"tests/users/test_authentication.py"
			],
			[
				"test_vi",
				"tests/patients/test_views.py"
			],
			[
				"init",
				"config/settings/__init__.py"
			],
			[
				"ustestvi",
				"tests/users/test_views.py"
			],
			[
				"vie",
				"mapistar/patients/views.py"
			],
			[
				"make",
				"Makefile"
			],
			[
				"auth",
				"mapistar/users/authentication.py"
			],
			[
				"man",
				"manage.py"
			],
			[
				"manag",
				"manage.py"
			],
			[
				"pro",
				"config/settings/prod.py"
			],
			[
				"loca",
				"config/settings/local.py"
			],
			[
				"uti",
				"mapistar/users/utils.py"
			],
			[
				"tev",
				"tests/patients/test_views.py"
			],
			[
				"ba",
				"config/settings/base.py"
			],
			[
				"tepa",
				"tests/patients/test_models.py"
			],
			[
				"c",
				"tests/conftest.py"
			],
			[
				"utsch",
				"mapistar/utils/schemas.py"
			],
			[
				"patiev",
				"mapistar/patients/views.py"
			],
			[
				"patienttest",
				"tests/patients/test_schemas.py"
			],
			[
				"schem",
				"mapistar/utils/schemas.py"
			],
			[
				"sch",
				"mapistar/patients/schemas.py"
			],
			[
				"factor",
				"tests/factories.py"
			],
			[
				"testut",
				"tests/utils/test_django_utils.py"
			],
			[
				"view",
				"mapistar/patients/views.py"
			],
			[
				"travis",
				".travis.yml"
			],
			[
				"test_",
				"tests/test_mapistar.py"
			],
			[
				"env",
				"env.example"
			],
			[
				".trav",
				".travis.yml"
			],
			[
				"m",
				"{{cookiecutter.project_slug}}/Makefile"
			],
			[
				"push",
				"{{cookiecutter.project_slug}}/{{cookiecutter.project_slug}}/pseudos/schemas.py"
			],
			[
				"mak",
				"{{cookiecutter.project_slug}}/Makefile"
			],
			[
				"",
				"{{cookiecutter.project_slug}}/Makefile"
			],
			[
				"p",
				"{{cookiecutter.project_slug}}/Pipfile"
			],
			[
				"json",
				"cookiecutter.json"
			],
			[
				"travi",
				".travis.yml"
			],
			[
				"post",
				"hooks/post_gen_project.py"
			],
			[
				"pos",
				"hooks/post_gen_project.py"
			],
			[
				"te",
				"{{cookiecutter.project_slug}}/tests/test_{{cookiecutter.project_slug}}.py"
			],
			[
				"mana",
				"{{cookiecutter.project_slug}}/manage.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/dev/maison/mapistar/mapistar.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 281.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
